<div class="flex sm:py-4 sm:px-6 gap-3 border-b border-[#333333] p-2">
  <img id="avatar" src="{{avatar}}" class="w-[36px] h-[36px] rounded-full"/>
      <div class="flex flex-col gap-2 w-full">
        <div class="flex gap-2 text-[#f3f5f7] cursor-pointer">
          <span>{{username}}</span>
          <span class="text-[#777777]" >{{time}}</span>
        </div>
        <span id="content" class="thread-content">{{content}}</span>
        <div class="image-container w-full max-w-full overflow-hidden">
          <img src="{{image}}" class="max-h-[400px] max-w-full h-auto rounded-[5px]"/>
        </div>

        <div class="flex items-center gap-5">
          <div id="{{id}}"  class="p-3 -ml-3 flex items-center h-[18px] gap-1" onclick="handleLike(event)">
            <svg viewBox="0 0 18 18" width="18" height="18" class="nonactive">
              <path
                d="M1.34375 7.53125L1.34375 7.54043C1.34374 8.04211 1.34372 8.76295 1.6611 9.65585C1.9795 10.5516 2.60026 11.5779 3.77681 12.7544C5.59273 14.5704 7.58105 16.0215 8.33387 16.5497C8.73525 16.8313 9.26573 16.8313 9.66705 16.5496C10.4197 16.0213 12.4074 14.5703 14.2232 12.7544C15.3997 11.5779 16.0205 10.5516 16.3389 9.65585C16.6563 8.76296 16.6563 8.04211 16.6562 7.54043V7.53125C16.6562 5.23466 15.0849 3.25 12.6562 3.25C11.5214 3.25 10.6433 3.78244 9.99228 4.45476C9.59009 4.87012 9.26356 5.3491 9 5.81533C8.73645 5.3491 8.40991 4.87012 8.00772 4.45476C7.35672 3.78244 6.47861 3.25 5.34375 3.25C2.9151 3.25 1.34375 5.23466 1.34375 7.53125Z" stroke-width="1.25">
              </path>
            </svg>
            <span class="flex items-center justify-center text-[12px] font-normal text-[#cccccc] cursor-pointer">{{likes}}</span>
          </div>
          <div class="p-3 -ml-3 flex items-center h-[18px] gap-1" onClick="showCommentSection()">
            <svg viewBox="0 0 18 18" width="18" height="18">
              <path
                d="M15.376 13.2177L16.2861 16.7955L12.7106 15.8848C12.6781 15.8848 12.6131 15.8848 12.5806 15.8848C11.3779 16.5678 9.94767 16.8931 8.41995 16.7955C4.94194 16.5353 2.08152 13.7381 1.72397 10.2578C1.2689 5.63919 5.13697 1.76863 9.75264 2.22399C13.2307 2.58177 16.0261 5.41151 16.2861 8.92429C16.4161 10.453 16.0586 11.8841 15.376 13.0876C15.376 13.1526 15.376 13.1852 15.376 13.2177Z"
                stroke-linejoin="round"
                stroke-width="1.25"
                stroke="#cccccc"
                fill="transparent">
                </path>
            </svg>
            <span class="flex items-center justify-center text-[12px] font-normal text-[#cccccc] cursor-pointer">{{comment}}</span>
          </div>
        </div>
      </div>
</div>
    <div id="comment-section" class="w-screen h-screen fixed z-100 top-0 hidden flex-col bg-black sm:bg-[#181818] sm:w-1/2 sm:border sm:border-[#333333]">
      <div class="flex relative h-[50px] items-center">
        <span class="cursor-pointer ml-6" onClick="quitCommentSection()">Hủy</span>
        <span class="font-bold absolute left-1/2 transform -translate-x-1/2 text-center">Thread trả lời</span>
      </div>
      <hr>
      <div class="flex-1 overflow-y-auto">
        {{#each comments}}
          {{> comment}}
        {{/each}}
      </div>
      
      <hr>
      <div class="h-[80px] rounded-lg p-2 flex items-center bg-black sm:bg-[#181818] w-full gap-2">
        <img src="/image/anonymous-user.jpg" class="w-[40px] h-[40px] rounded-full" />
        <div class="flex items-center bg-[#333333]  flex-1 rounded-xl">
          <input type="text" placeholder="Write a comment..." class="flex-1 bg-transparent border-none text-[#ddd] outline-none ml-2"/>
          <button class="bg-none border-none text-[#777] cursor-pointer p-3 sm: text-[18px]">➤</button>
        </div>
      </div>
    </div>
<script>
async function handleLike(event) {
  try {
    event.preventDefault();
    console.log("click")
    const svg = event.currentTarget.querySelector('svg');
      if (svg) {
        if (svg.classList.contains('active')) {
          svg.classList.remove('active');
          svg.classList.add('nonactive');
        } else {
          svg.classList.remove('nonactive');
          svg.classList.add('active');
        }
    }
    localStorage.setItem('userid', '123');

    const data = {
      userid: localStorage.getItem('userid'),
      threadid: event.currentTarget.id
    };
    console.log(data);
    const response = await fetch('http://localhost:3000/like', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
  } catch (error) {
    console.error('Có lỗi xảy ra:', error.message);
  }
}
const showCommentSection = () => {
  const commentSection = document.querySelector('#comment-section');
  commentSection.style.display = 'flex';
  const navigation = document.querySelector('#navigation');
  navigation.style.display = 'none';
};
const quitCommentSection = () => {
  const commentSection = document.querySelector('#comment-section');
  commentSection.style.display = 'none';
  const navigation = document.querySelector('#navigation');
  navigation.style.display = 'flex';
};
</script>