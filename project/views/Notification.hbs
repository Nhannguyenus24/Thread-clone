<div class="bg-transparent overflow-y-auto">
    {{#each notifications}}
    {{> notification}}
    {{/each}}

    <div class="fixed bottom-[40px] left-1/2 transform -translate-x-1/2 bg-white text-black p-[10px_20px] rounded-[8px] shadow-[0_2px_10px_rgba(0,0,0,0.2)] opacity-100 animate-slideUp animate-stay animate-slideDown"
                id="deleteNoti" style="display: none;">
    </div>
<script>
    function showInfoBox(message) {
        const infoBox = document.getElementById('deleteNoti');
        infoBox.textContent = message;
        infoBox.style.display = 'block';
        
        setTimeout(() => {
            infoBox.style.display = 'none';
        }, 1000);  
    }

    let isProcessing = false;

    async function markAsRead(notificationId, element) {
        if (isProcessing) return;

        isProcessing = true;
        try {
            const response = await fetch(`http://localhost:3000/notification/${notificationId}`, {
                method: 'PUT',
            });

            if (response.ok) {
                const unreadDot = element.querySelector('.bg-blue-400');
                if (unreadDot) {
                    unreadDot.style.display = 'none';
                }
            }
        } catch (error) {
            console.error('Error:', error);
        } finally {
            isProcessing = false;
        }
    }


    async function deleteNoti(notiId, btnElement) {
        if (isProcessing) return;

        isProcessing = true;

        try {
            const response = await fetch(`http://localhost:3000/notification/delete/${notiId}`, {
                method: 'PUT',
            });

            if (response.ok) {
                //console.log('haha');
                const deletedThread = document.querySelector(`[data-id='${notiId}']`);
                //console.log(deletedThread);
                if (deletedThread) {
                    deletedThread.style.display = 'none';
                }
                const data = await response.json();
                console.log(data.message);
                showInfoBox(data.message);
            }
        } catch(error) {
            console.error('Error:', error);
            showInfoBox(error);
        } finally {
            isProcessing = false;
        }
    }
</script>
